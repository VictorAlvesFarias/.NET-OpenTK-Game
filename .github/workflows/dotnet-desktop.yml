name: Build and Release Client and Server

on:
  push:
    tags:
      - 'v*' # Executa quando tags no formato v1.0, v2.0, etc. são criadas

jobs:
  build-client:
    name: Build Client
    runs-on: ubuntu-latest # ou windows-latest/macos-latest dependendo do seu projeto
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js (exemplo para projeto JavaScript)
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Install dependencies and build client
      run: |
        cd client
        npm install
        npm run build
      # Adapte os comandos acima conforme o seu projeto (pode ser yarn, pnpm, etc.)
      
    - name: Upload client artifact
      uses: actions/upload-artifact@v4
      with:
        name: client-build
        path: client/dist/ # Ajuste para o diretório de output do seu build
        if-no-files-found: error

  build-server:
    name: Build Server
    runs-on: ubuntu-latest # ou windows-latest dependendo do seu projeto
    needs: build-client # Opcional: remove se quiser que rodem em paralelo
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET (exemplo para projeto .NET)
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        
    - name: Build server
      run: |
        cd server
        dotnet restore
        dotnet publish -c Release -o out
      # Adapte os comandos acima conforme o seu projeto (pode ser maven, gradle, etc.)
      
    - name: Upload server artifact
      uses: actions/upload-artifact@v4
      with:
        name: server-build
        path: server/out/ # Ajuste para o diretório de output do seu build
        if-no-files-found: error

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build-client, build-server]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download client artifact
      uses: actions/download-artifact@v4
      with:
        name: client-build
        path: client-build
        
    - name: Download server artifact
      uses: actions/download-artifact@v4
      with:
        name: server-build
        path: server-build
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
        
    - name: Upload Client Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./client-build/
        asset_name: client-build.zip
        asset_content_type: application/zip
        
    - name: Upload Server Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./server-build/
        asset_name: server-build.zip
        asset_content_type: application/zip
